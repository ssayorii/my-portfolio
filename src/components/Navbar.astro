---

---

<nav
  class="bg-white fixed top-0 left-0 z-50 w-full border-b border-gray-200 px-6 sm:px-12 py-4 flex items-center justify-center"
>
  <div class="flex items-center relative">
    <!-- <div class="w-6 h-6 bg-gray-400 rotate-45 absolute right-98"></div> -->
    <!-- <div class="left-10 margin md:w-82 h-[2px] bg-red-400"></div> -->
  </div>
  <ul class="flex gap-5 text-sm text-gray-800 font-medium">
    <li><a href="#hero" class="hover:text-red-400 transition">Home</a></li>
    <li>
      <a href="#services" class="hover:text-red-400 transition">Services</a>
    </li>

    <li>
      <a href="#projects" class="hover:text-red-400 transition">Projects</a>
    </li>

    <li>
      <a href="#contact" class="hover:text-red-400 transition">Contact</a>
    </li>
  </ul>
</nav>

<!-- Spacer to prevent content from being hidden behind the fixed navbar -->
<div style="height:64px;"></div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
      anchor.addEventListener("click", (e) => {
        const href = (anchor as HTMLAnchorElement).getAttribute("href");
        const target = href ? document.querySelector(href) : null;
        if (target) {
          e.preventDefault();
          target.scrollIntoView({ behavior: "smooth" });

          const sectionId = href.replace("#", "");
          const underline = document.querySelector(
            `.section-underline[data-section="${sectionId}"]`
          );
          if (underline) {
            underline.classList.remove("pop-animate");
            (underline as HTMLElement).offsetWidth;
            underline.classList.add("pop-animate");

            // Particle effect
            const parent = underline.parentElement;
            if (parent) {
              for (let i = 0; i < 12; i++) {
                const particle = document.createElement("div");
                particle.className = "particle";
                // Random angle and distance for a more natural burst
                const angle = Math.random() * 2 * Math.PI;
                const distance = 18 + Math.random() * 22;
                particle.style.setProperty(
                  "--dx",
                  `${Math.cos(angle) * distance}px`
                );
                particle.style.setProperty(
                  "--dy",
                  `${Math.sin(angle) * distance}px`
                );
                // Random size and opacity
                const size = 6 + Math.random() * 8;
                particle.style.width = `${size}px`;
                particle.style.height = `${size}px`;
                particle.style.opacity = `${0.6 + Math.random() * 0.4}`;
                // Position in the center of the underline
                particle.style.left = "50%";
                particle.style.top = "50%";
                particle.style.transform = "translate(-50%, -50%)";
                parent.appendChild(particle);
                // Remove after animation
                particle.addEventListener("animationend", () => {
                  particle.remove();
                });
              }
            }
          }
        }
      });
    });
  });
</script>
